# define /api/people
swagger: "2.0"
info:
  version: "1.0.0"
  title: API Documentation for RevConnexion
  description: RESTful API for working with\
    the Pedagogy performance management app
consumes:
  - "application/json"
produces:
  - "application/json"
basePath: "/api"

# Paths supported by the application
paths:
  /reviews:
    get:
      operationId: "reviews.read_sql" # defines the Python import path/function that will respond to the GET
      tags:
        - Reviews
      summary: "Read all reviews from db"
      description: "Read all reviews from response table in db"
      parameters:
        - name: length
          in: query # path: (/reviews/{length}) or query: (/reviews?length=2)
          type: integer
          description: Number of reviews to be returned
          required: False
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list
          required: False
        - name: workshop_id
          in: query
          type: integer
          description: ID of workshop that is being referenced
          required: False
      responses:
        200:
          description: "Successful read operation on reviews"
          schema:
            type: "array"
            items:
              properties:
                assistants_score:
                  type: "integer"
                comments:
                  type: "string"
                difficulty:
                  type: "integer"
                id:
                  type: "integer"
                knowledge:
                  type: "integer"
                objectives:
                  type: "integer"
                satisfaction_score:
                  type: "integer"
                timeliness:
                  type: "integer"
                venue_score:
                  type: "integer"
                workshop_id:
                  type: "integer"
    post:
      operationId: reviews.create_sql
      tags:
        - review
      summary: Post a review to db
      description: Create a response instance and write to db
      parameters:
        - name: review
          in: body
          description: review to create
          required: True
          schema:
            type: object
            properties:
                assistants_score:
                  type: "integer"
                comments:
                  type: "string"
                  description: "Comment (body) of the review"
                difficulty:
                  type: "integer"
                id:
                  type: "integer"
                knowledge:
                  type: "integer"
                objectives:
                  type: "integer"
                satisfaction_score:
                  type: "integer"
                timeliness:
                  type: "integer"
                venue_score:
                  type: "integer"
                workshop_id:
                  type: "integer"
      responses:
        201:
          description: Successfully created review

  /reviews/{id}:
    get:
      operationId: reviews.read_sql_one
      tags:
        - review
      summary: Read a review from db
      description: Read a review from response table in db
      parameters:
        - name: id
          in: path # /reviews/2
          description: id to identify the review
          type: integer
          required: True
      responses:
        200:
          description: Successful read operation on one review
          schema:
            properties:
              assistants_score:
                type: "integer"
              comments:
                type: "string"
              difficulty:
                type: "integer"
              id:
                type: "integer"
              knowledge:
                type: "integer"
              objectives:
                type: "integer"
              satisfaction_score:
                type: "integer"
              timeliness:
                type: "integer"
              venue_score:
                type: "integer"
              workshop_id:
                type: "integer"
    put:
      operationId: reviews.update
      tags:
        - review
      summary:
        Update a review
      description:
        Update a review in the reviews list
      parameters:
        - name: id
          in: path
          description: id to identify the review
          type: integer
          required: True
        - name: review
          in: body
          schema:
            type: object
            properties:
              assistants_score:
                type: "integer"
              comments:
                type: "string"
                description: "Comment (body) of the review"
              difficulty:
                type: "integer"
              knowledge:
                type: "integer"
              objectives:
                type: "integer"
              satisfaction_score:
                type: "integer"
              timeliness:
                type: "integer"
              venue_score:
                type: "integer"
              workshop_id:
                type: "integer"
      responses:
        200:
          description: Successfully updated review          
    delete:
      operationId: reviews.delete
      tags:
        - review
      summary: Delete a review
      description: Delete a review in the reviews list
      parameters:
        - name: id
          in: path
          type: integer
          required: True
      responses:
        200:
          description: Successfully deleted a review
